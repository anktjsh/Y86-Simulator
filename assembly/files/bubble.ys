.pos 0
	irmovq Stack, %rsp
    	call Main
    	halt
# Array of 4 elements
.align 8
data:
  	.quad 0x0000000000000004
  	.quad 0x0000000000000003
  	.quad 0x0000000000000002
  	.quad 0x0000000000000007
	.quad 0x0000000000000008
	.quad 0x0000000000000006
	.quad 0x0000000000000003
	.quad 0x0000000000000002
	.quad 0x0000000000000009
	.quad 0x0000000000000000
	.quad 0x0000000000000002
Main:
  	irmovq data,%rdi
    	irmovq $11,%rsi
    	call ysBubbleP
    	ret
# long ys_bubble_p(long *data, long *end)
# data in %rdi, end in %rsi
ysBubbleP:
	irmovq $1, %r8
	subq %r8, %rsi
	irmovq $8, %r9
	irmovq $0, %r10
addLoop:
	andq %rsi, %rsi
	je init
	addq %r9, %r10
	subq %r8, %rsi
	jmp addLoop
init:
	rrmovq %r10, %rsi
	addq %rdi, %rsi
	jmp L2
 L4:
  	mrmovq 8(%rax), %r9
  	mrmovq (%rax), %r10
  	rrmovq %r9, %r8
  	subq %r10, %r8
  	jge L3
  	rmmovq %r10, 8(%rax)
  	rmmovq %r9, (%rax)
L3:
  	irmovq $8, %r8
  	addq %r8, %rax
  	jmp L5
L6:
 	rrmovq %rdi, %rax
L5:
  	rrmovq %rsi, %r8
	subq %rax, %r8
	jg L4
	irmovq $8, %r8
  	subq %r8, %rsi
L2:
 	rrmovq %rsi, %r8
 	subq %rdi, %r8
 	jg L6
	ret
.pos 0x200
Stack:

